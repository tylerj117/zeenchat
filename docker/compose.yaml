services:
  server:
    # image: ghcr.io/jackruitco/gallery-storefront:${SERVER_IMAGE_TAG}
    build:
      context: ..
      dockerfile: docker/Dockerfile
    env_file:
      - .env
    expose:
      - '8000'
    volumes:
      - static-vol:/app/static
      - media-vol:/app/media
    networks:
      - StoreNet
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16.4
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    expose:
      - '5432'
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_PORT: ${DB_PORT}
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - StoreNet

  nginx:
    image: nginx:latest
    ports:
      - '80:80'
    env_file:
      - stack.env
    volumes:
      - opt/www/nginx/custom-nginx.conf:/etc/nginx/conf.d/default.conf
      # - ../nginx/custom-nginx.conf:/etc/nginx/conf.d/default.conf
      - static-vol:/app/static
      - media-vol:/app/media
    depends_on:
      - server
    networks:
      - StoreNet
      # - _TunnelNet            # Cloudflare Tunnel
volumes:
  db-data:
  static-vol:
  media-vol:
networks:
  StoreNet:
    driver: bridge
#   _TunnelNet:
#     external: True

